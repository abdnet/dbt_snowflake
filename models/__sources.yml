version: 2

sources:
  - name: ecommerce
    database: RAW
    schema: SEED_DATA
    tables:
      - name: src_customers
        description: One record per customer. Includes information about customers.
      - name: src_orders
        description: One record per order. Includes cancelled and deleted orders.
      - name: src_products
        description: One record per product. Includes details about products.
      - name: src_stores
        description: One record per store. Includes information about stores.
      - name: src_supplies
        description: One record per supply. Includes information about supplies.
      - name: src_items
        description: One record per item in an order. Includes details about items.

models:
  - name: customers
    description: One record per customer. Includes information about customers.
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_customers')
          config:
            severity: warn
      # - dbt_expectations.expect_table_aggregation_to_equal_other_table:
      #     expression: count(*)
      #     compare_model: ref('orders')
      #     compare_expression: count(*)
      #     group_by: [id]
      #     compare_group_by: [customer]

    columns:
      - name: id
        description: "Primary key of the customers table."
        tests:
          - unique
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: first_name
        description: "First name of the customer."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: last_name
        description: "Last name of the customer."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: text
      - name: birthday
        description: "Date of birth of the customer."
        tests:
          
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp
          - dbt_utils.expression_is_true:
              name: quality_date_validate_birthday
              expression: "<current_date"
      - name: first_order
        description: "Date of the customer's first order."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp

      - name: last_order
        description: "Date of the customer's last order."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: timestamp
          - dbt_utils.expression_is_true:
              name: quality_date_first_last_order
              expression: ">first_order"

      - name: total_orders
        description: "Total number of orders placed by the customer."
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: int

  - name: items
    description: One record per item in an order. Includes details about items.
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_items')
          config:
            severity: warn
    columns:
      - name: id
        description: Primary key of the items table
        tests:
          - unique
          - not_null
      - name: order_id
        description: Foreign key referencing the order to which the item belongs
        tests:
          - not_null
          - relationships:
              to: ref('orders')
              field: id
      - name: sku
        description: Stock Keeping Unit (SKU) of the item
        tests:
          - not_null
          - relationships:
              to: ref('products')
              field: sku

  - name: orders
    description: One record per order. Includes cancelled and deleted orders.
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_orders')
          config:
            severity: warn
    columns:
      - name: id
        description: Primary key of the orders table
        tests:
          - unique
          - not_null
      - name: customer
        description: Foreign key referencing the customer who placed the order
        tests:
          - not_null
          - relationships:
              to: ref('customers')
              field: id
      - name: ordered_at
        description: Timestamp when the order was placed
        tests:
          - not_null
      - name: store_id
        description: Foreign key referencing the store where the order was placed
        tests:
          - not_null
          - relationships:
              to: ref('stores')
              field: id
      - name: subtotal
        description: Subtotal amount of the order
        tests:
          - not_null
      - name: tax_paid
        description: Tax amount paid for the order
        tests:
          - not_null
      - name: order_total
        description: Total amount of the order including tax
        tests:
          - not_null

  - name: products
    description: One record per product. Includes details about products.
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_products')
          config:
            severity: warn
    columns:
      - name: sku
        description: Stock Keeping Unit (SKU) of the product
        tests:
          - unique
          - not_null
      - name: name
        description: Name of the product
        tests:
          - not_null
      - name: type
        description: Type of the product
        tests:
          - not_null
      - name: price
        description: Price of the product
        tests:
          - not_null
      - name: description
        description: Description of the product

  - name: stores
    description: One record per store. Includes information about stores.
    tests:
      - dbt_utils.equal_rowcount:
          compare_model: ref('stg_stores')
          config:
            severity: warn
    columns:
      - name: id
        description: Primary key of the stores table
        tests:
          - unique
          - not_null
      - name: name
        description: Name of the store
        tests:
          - not_null
      - name: opened_at
        description: Timestamp when the store was opened
        tests:
          - not_null
      - name: tax_rate
        description: Tax rate for the store
        tests:
          - not_null
          - dbt_utils.not_constant

  # - name: supplies
  #   description: One record per supply. Includes information about supplies.
  #   tests:
  #     - dbt_utils.equal_rowcount:
  #         compare_model: ref('stg_supplies')
  # config:
  #               severity: warn
  #   columns:
  #     - name: id
  #       description: Primary key of the supplies table
  #       tests:
  #         - not_null
  #     - name: name
  #       description: Name of the supply
  #       tests:
  #         - not_null
  #     - name: cost
  #       description: Cost of the supply
  #       tests:
  #         - not_null
  #     - name: perishable
  #       description: Indicates whether the supply is perishable
  #       tests:
  #         - not_null
  #     - name: sku
  #       description: Stock Keeping Unit (SKU) of the supply
  #       tests:
  #         - not_null
